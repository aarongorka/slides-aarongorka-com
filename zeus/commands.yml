commands:
  build:
    exec: docker-compose run --rm hugo --cleanDestinationDir
    dependencies:
      - dotenv

  test:
    exec: docker-compose run cfn-python-lint cfn-lint -t cloudformation.yml
    dependencies:
      - dotenv

  start:
    exec: docker-compose run --rm --service-ports hugo
    dependencies:
      - dotenv

  syncToS3:
    exec: |
      docker-compose run --rm envvars ensure --tags aws,sync
      docker-compose run --rm aws aws s3 sync --no-progress --delete --cache-control 'max-age=3155695200' public/ s3://${DOMAIN_NAME}/
    dependencies:
      - dotenv

  cacheInvalidation:
    exec: |
      docker-compose run --rm envvars ensure --tags aws,invalidate
      docker-compose run --rm aws bash -c 'aws cloudfront create-invalidation --distribution-id=$(aws cloudformation --region us-east-1 describe-stacks --stack-name ${AWS_CLOUDFORMATION_STACK_NAME} --query "Stacks[0].Outputs[?OutputKey==\`CloudFrontDistributionId\`].OutputValue" --output=text) --paths "/*"'
    dependencies:
      - dotenv

  deploy:
    exec: |
      docker-compose run --rm envvars ensure --tags aws,cfn
      docker-compose run --rm stacker build stacker.yml --tail --recreate-failed
    dependencies:
      - dotenv

  diff:
    exec: |
      docker-compose run --rm envvars ensure --tags aws,cfn
      docker-compose run --rm stacker diff stacker.yml
    dependencies:
      - dotenv

  dotenv:
    exec: |
      touch .env
      docker-compose run --rm envvars validate
      docker-compose run --rm envvars envfile --overwrite
    outputs:
      - ".env"
