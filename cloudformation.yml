AWSTemplateFormatVersion: "2010-09-09"

Description: CloudFront for static website

Parameters:
  DomainName:
    Description: User-facing DNS records
    Type: String
  HostedZone:
    Description: R53 hosted zone that the DomainName goes in
    Type: String
  CertificateArn:
    Description: ARN of ACM certificate in us-east-1
    Type: String
  OaiId:
    Description: ID of pre-created Origin Access Identity
    Type: String
    AllowedPattern: '[A-Z1-9]{14}'

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DomainName

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref 'S3Bucket'
      PolicyDocument:
        Statement:
        - Sid: !Sub "${AWS::StackName}-oai-allow"
          Action: s3:GetObject
          Effect: Allow
          Principal:
            AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${OaiId}"
          Resource: !Sub
            - "${BucketArn}/*"
            - { "BucketArn": !GetAtt S3Bucket.Arn }

  r53:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref DomainName
      HostedZoneName: !Sub "${HostedZone}."
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        EvaluateTargetHealth: False
        HostedZoneId: Z2FDTNDATAQYW2 # Fixed. CloudFront Zone ID

  r53AAAA:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref DomainName
      HostedZoneName: !Sub "${HostedZone}."
      Type: AAAA
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        EvaluateTargetHealth: False
        HostedZoneId: Z2FDTNDATAQYW2 # Fixed. CloudFront Zone ID

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Origins:
          - DomainName: !GetAtt S3Bucket.DomainName
            Id: S3BucketOrigin
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${OaiId}"
        Comment: !Ref DomainName
        Aliases:
          - !Ref DomainName
        IPV6Enabled: true
        DefaultRootObject: 'index.html'
        DefaultCacheBehavior:
          TargetOriginId: S3BucketOrigin
          Compress: true
          AllowedMethods:
            - HEAD
            - GET
          ForwardedValues:
            QueryString: false
          ViewerProtocolPolicy: redirect-to-https
          LambdaFunctionAssociations:
            - EventType: origin-request
              LambdaFunctionARN: !Ref TheOriginRequestLambdaFunctionVersion
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
        HttpVersion: http2
        CustomErrorResponses:
          - ErrorCode: 404
            ResponsePagePath: '/404.html'
            ResponseCode: 404
          - ErrorCode: 403
            ResponsePagePath: '/404.html'
            ResponseCode: 404

# combination of https://github.com/digital-sailors/standard-redirects-for-cloudfront and https://github.com/lroguet/amzn-cloudformation/blob/master/storage-content-delivery/static-website-with-cloudfront-lambda-edge.yml
  TheOriginRequestLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: >
        Lambda function performing request URI rewriting.
      Code:
        ZipFile: !Sub |
          'use strict';
          
          /*
            Copyright 2017 DigitalSailors e.K.
          
            Licensed under the Apache License, Version 2.0 (the "License");
            you may not use this file except in compliance with the License.
            You may obtain a copy of the License at
          
              http://www.apache.org/licenses/LICENSE-2.0
          
            Unless required by applicable law or agreed to in writing, software
            distributed under the License is distributed on an "AS IS" BASIS,
            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
            See the License for the specific language governing permissions and
            limitations under the License.
          */
          
          exports.handler = (event, context, callback) => {
            const request = event.Records[0].cf.request;
            
            let prefixPath; // needed for 2nd condition
          
            if (request.uri.match('.+/$')) {
              request.uri += 'index.html';
              callback(null, request);
            } else if (prefixPath = request.uri.match('(.+)/index.html')) {
              const response = {
                status: '301',
                statusDescription: 'Found',
                headers: {
                  location: [{
                    key: 'Location', value: prefixPath[1] + '/',
                  }],
                }
              };
              callback(null, response);
            } else if (request.uri.match('/[^/.]+$')) {
              const response = {
                status: '301',
                statusDescription: 'Found',
                headers: {
                  location: [{
                    key: 'Location', value: request.uri + '/',
                  }],
                }
              };
              callback(null, response);
            } else {
              callback(null, request);
            }
          }
      Handler: index.handler
      MemorySize: 128
      Role: !Sub ${TheOriginRequestLambdaFunctionExecutionRole.Arn}
      Runtime: nodejs6.10

  TheOriginRequestLambdaFunctionVersion:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref TheOriginRequestLambdaFunction
      Description: !Sub "URL rewriting for ${DomainName}"

  TheOriginRequestLambdaFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - edgelambda.amazonaws.com
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

Outputs:
  CloudFrontDistributionId:
    Description: CloudFront ID
    Value: !Ref CloudFrontDistribution
  CloudFrontDistributionDomainName:
    Description: CloudFront Domain Name
    Value: !GetAtt CloudFrontDistribution.DomainName
  URL:
    Description: User-facing URL
    Value: !Sub "https://${DomainName}"
